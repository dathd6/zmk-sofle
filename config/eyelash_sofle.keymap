#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N1     &kp N2      &kp N3        &kp N4              &kp N5        &msc SCRL_UP   &kp N6        &kp N7       &kp N8            &kp N9         &kp N0       &kp BACKSPACE
&kp TAB    &kp Q      &kp W       &kp E         &kp R               &kp T         &msc SCRL_DOWN      &kp Y         &kp U        &kp I             &kp O          &kp P        &kp BSLH
&kp LGUI   &kp A      &kp S       &kp D         &kp F               &kp G         &mmv SCRL_LEFT    &kp H         &kp J        &kp K             &kp L          &kp SEMI     &kp APOS
&kp LCTRL  &kp Z      &kp X       &kp C         &kp V               &kp B         &mmv SCRL_RIGHT    &kp N         &kp M        &kp COMMA         &kp DOT        &kp FSLH     &kp ENTER
&trans     &trans     &kp LCTRL   &kp LGUI      &lt 2 TAB     &lt 1 SPACE         &mkp LCLK         &lt 3 BACKSPACE  &kp LSHFT  &kp ENTER     &kp TAB        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp LG(N1)       &kp LG(N2)      &kp LG(N3)       &kp LG(N4)     &kp LG(N5)   &kp UP_ARROW      &kp LG(N6)    &kp LG(N7)     &kp LG(N8)             &kp LG(N9)     &kp LG(N0)        &kp F12
&trans      &kp LG(Q)        &kp LG(W)       &kp LG(E)        &kp LG(R)      &kp LG(T)    &kp DOWN_ARROW    &kp MINUS      &kp EQUAL        &kp HOME              &kp END      &kp LG(T)         &kp LG(N)
&trans      &kp LG(A)        &kp LG(S)       &kp LG(D)        &kp LG(F)      &kp LG(G)    &kp LEFT_ARROW    &kp SEMI      &kp APOS       &kp RIGHT_BRACKET      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_BRACKET
&trans      &kp LG(Z)        &kp LG(X)       &kp LG(C)        &kp LG(V)      &kp LG(B)    &kp RIGHT_ARROW   &kp COMMA     &kp DOT        &kp FSLH               &kp LG(L)      &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans         &trans       &kp ENTER         &kp LA(SPACE) &trans         &trans                 &trans         &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &kp LA(N1) &kp LA(N2)  &kp LA(N3) &kp LA(N4) &kp LA(N5)    &trans     &kp LA(N6)      &kp LA(N7)  &kp LA(N8) &kp LA(N9) &kp LA(N0)         &trans
&trans  &kp LA(Q)  &trans      &kp LA(E)  &kp LA(R)  &kp LA(T)     &trans     &trans          &kp LC(U)   &kp LC(I)  &kp LC(O)  &kp LC(P)           &trans
&trans  &kp LC(A)  &trans      &kp LC(D)  &kp LA(F)  &trans        &trans     &kp LA(H)       &kp LA(J)   &kp LA(K)  &kp LA(L)  &kp RIGHT_BRACKET  &kp RIGHT_BRACKET
&trans  &trans     &trans      &kp LG(C)  &trans     &trans        &trans     &kp LC(N)       &trans      &trans     &trans     &trans             &trans
&trans  &trans     &trans      &trans     &trans     &trans        &trans     &kp LA(SPACE)   &kp DOWN    &kp UP     &kp RIGHT  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans     &kp LS(N1)      &kp LS(N2)        &kp LS(N3)      &kp LS(N4)      &kp LS(N5)      &mmv MOVE_UP     &kp LS(N6)  &kp LS(N7)  &kp LS(N8)      &kp LS(N9)  &kp LS(N0)      &kp LG(T)
&trans     &mkp LCLK       &mmv MOVE_UP      &mkp RCLK       &trans   &trans          &mmv MOVE_DOWN   &kp UNDER   &kp PLUS    &kp HOME        &kp END     &kp DOWN   &kp UP
&trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT &trans   &trans          &mmv MOVE_LEFT   &kp COLON   &kp DOUBLE_QUOTES     &kp LBRC        &kp RBRC   &kp LEFT    &kp RIGHT
&trans     &trans          &trans            &trans          &trans          &trans          &mmv MOVE_RIGHT  &kp LT      &kp GT       &kp QUESTION   &trans      &trans      &trans
&trans     &trans          &trans            &trans          &trans          &trans          &mkp LCLK        &trans      &trans       &trans         &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
