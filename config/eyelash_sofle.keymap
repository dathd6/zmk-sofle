#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5    &mmv MOVE_UP     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp MINUS
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T     &mmv MOVE_DOWN   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp EQUAL
&kp LSHFT   &kp A      &kp S         &kp D         &kp F   &kp G     &mmv MOVE_LEFT   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LCTRL   &kp Z      &kp X         &kp C         &kp V   &kp B     &mmv MOVE_RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp CAPS   &kp LEFT_GUI  &kp LEFT_ALT  &mo 1 &kp SPACE   &mkp LCLK        &kp ENTER  &mo 2  &kp BACKSPACE    &kp LEFT_BRACKET &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp LA(N1)       &kp LA(N2)      &kp LA(N3)       &kp LA(N4)       &kp LA(N5)        &kp UP_ARROW     &kp LA(N6)       &kp LA(N7)       &kp LA(N8)  &kp LA(N9) &kp F12           &kp BSLH
&trans      &kp F1           &kp F2          &kp F3           &kp F4           &kp F5            &kp DOWN_ARROW   &kp LA(Y)        &kp END          &kp PG_DN   &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp LA(A)        &trans          &trans           &trans           &mkp MB5          &kp LEFT_ARROW   &kp LEFT         &kp DOWN           &kp UP    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &kp LA(Z)        &kp LA(X)       &kp LA(C)        &kp LA(V)        &rgb_ug RGB_SPI   &kp RIGHT_ARROW  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans            &kp ENTER        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &mmv MOVE_UP  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT        &trans        &trans          &mmv MOVE_LEFT   &kp HOME  &kp PG_DOWN  &kp PG_UP    &kp END     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
